<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Dashboard - SB Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/style.min.css" rel="stylesheet" />
    <link href="~/css/styles.css" rel="stylesheet" />
    <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <style>
        #bookingTable {
            display: none; /* Ẩn bảng mặc định */
        }
        /* Bố cục và kiểu dáng cho bảng */
        #bookingTable {
            display: none; /* Ẩn bảng mặc định */
            width: 100%; /* Đảm bảo bảng chiếm toàn bộ chiều rộng của container */
            border-collapse: collapse; /* Hợp nhất các đường viền của ô */
        }

            /* Định dạng tiêu đề bảng */
            #bookingTable thead {
                background-color: #343a40; /* Màu nền cho tiêu đề bảng */
                color: #ffffff; /* Màu chữ cho tiêu đề bảng */
            }

            #bookingTable th {
                padding: 12px 15px; /* Khoảng cách xung quanh nội dung tiêu đề */
                text-align: left; /* Căn trái nội dung tiêu đề */
                border-bottom: 1px solid #dee2e6; /* Đường viền dưới tiêu đề bảng */
            }

            /* Định dạng các hàng trong bảng */
            #bookingTable tbody tr:nth-child(even) {
                background-color: #f8f9fa; /* Màu nền cho hàng chẵn */
            }

            #bookingTable tbody tr:nth-child(odd) {
                background-color: #ffffff; /* Màu nền cho hàng lẻ */
            }

            #bookingTable td {
                padding: 12px 15px; /* Khoảng cách xung quanh nội dung ô */
                border-bottom: 1px solid #dee2e6; /* Đường viền dưới các ô dữ liệu */
            }

<!-- Nội dung của Product -->
<div class="container-fluid px-4">
    <div id="bookingTable" class="card mb-4">
        <div class="card-header">
            <div class="row">
                <div class="col-md-12 text-end">
                    <button class="btn btn-primary" id="btnAdd">+ Add</button>
                </div>
            </div>
        </div>
        <div id="product-container">
            <table class="table table-striped table-bordered" style="width:100%" id="tblProduct">
                <thead class="thead-dark">
                    <tr>
                        <th>Product Id</th>
                        <th>Product Name</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th>Weight</th>
                        <th>Image</th>
                        <th>Ammount</th>
                        <th>Category</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>

        </div>
        <!-- Add Product Modal -->
        <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addProductModalLabel">Add Product</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="addProductForm" enctype="multipart/form-data">
                            <div class="form-group">
                                <label for="addProductName">Product Name</label>
                                <input type="text" class="form-control" id="addProductName" required>
                            </div>
                            <div class="form-group">
                                <label for="addProductDescription">Description</label>
                                <input type="text" class="form-control" id="addProductDescription" required>
                            </div>
                            <div class="form-group">
                                <label for="addProductPrice">Price</label>
                                <input type="number" class="form-control" id="addProductPrice" required>
                            </div>
                            <div class="form-group">
                                <label for="addProductWeight">Weight</label>
                                <input type="number" class="form-control" id="addProductWeight" required>
                            </div>
                            <div class="form-group">
                                <label for="addProductImage">Image</label>
                                <input type="file" class="form-control" id="addProductImage" required>
                            </div>
                            <div class="form-group">
                                <label for="addProductAmmount">Ammount</label>
                                <input type="number" class="form-control" id="addProductAmmount" required>
                            </div>
                            <div class="form-group">
                                <label for="addProductCategory">Category</label>
                                <input type="number" class="form-control" id="addProductCategory" required>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="saveProduct">Save</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Edit Product Modal -->
        <div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="editProductForm" enctype="multipart/form-data">
                            <input type="hidden" id="editProductId">
                            <div class="form-group">
                                <label for="editProductName">Product Name</label>
                                <input type="text" class="form-control" id="editProductName" required>
                            </div>
                            <div class="form-group">
                                <label for="editProductDescription">Description</label>
                                <input type="text" class="form-control" id="editProductDescription" required>
                            </div>
                            <div class="form-group">
                                <label for="editProductPrice">Price</label>
                                <input type="number" class="form-control" id="editProductPrice" required>
                            </div>
                            <div class="form-group">
                                <label for="editProductWeight">Weight</label>
                                <input type="number" class="form-control" id="editProductWeight" required>
                            </div>
                            <div class="form-group">
                                <label for="editProductImage">Image</label>
                                <input type="file" class="form-control" id="editProductImage">
                            </div>
                            <div class="form-group">
                                <label for="editProductAmmount">Ammount</label>
                                <input type="number" class="form-control" id="editProductAmmount" required>
                            </div>
                            <div class="form-group">
                                <label for="editProductCategory">Category</label>
                                <input type="number" class="form-control" id="editProductCategory" required>
                            </div>

                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="updateProduct">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            $(".modal .close, .modal button.btn-secondary").click(function () {
                $(this).closest(".modal").modal("hide");
            });

        $("#btnAdd").click(function () {
            $("#addProductModal").modal("show");
        });
        const productContent = document.getElementById('productContent');
        const productLink = document.getElementById('productLink');

            $("#saveProduct").click(function () {
                var formData = new FormData();
                formData.append("Name", $("#addProductName").val());
                formData.append("Description", $("#addProductDescription").val());
                formData.append("Price", $("#addProductPrice").val());
                formData.append("Weight", $("#addProductWeight").val());
                formData.append("ImageFile", $("#addProductImage")[0].files[0]);
                formData.append("Ammount", $("#addProductAmmount").val());
                formData.append("CategoryId", $("#addProductCategory").val());

                $.ajax({
                    url: 'https://localhost:7135/api/Products/AddProduct',
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (response) {
                        $("#addProductModal").modal("hide");
                        loadProductList();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error:', textStatus, errorThrown);
                    }
                });
            });

            $(document).on("click", ".btnEdit", function () {
                var productId = $(this).data("id");
                console.log("Product ID: ", productId);
                $.ajax({
                    url: 'https://localhost:7135/api/Products/' + productId,
                    type: 'GET',
                    dataType: 'json',
                    success: function (product) {
                        console.log("Product data: ", product);
                        $("#editProductId").val(product.id);
                        $("#editProductName").val(product.name);
                        $("#editProductDescription").val(product.description);
                        $("#editProductPrice").val(product.price);
                        $("#editProductWeight").val(product.weight);
                        $("#editProductAmmount").val(product.ammount);
                        $("#editProductCategory").val(product.categoryId);

                        if (product.image) {
                            $("#currentImage").attr("src", 'data:image/jpeg;base64,' + product.image);
                        } else {
                            $("#currentImage").attr("src", ''); // Xóa ảnh nếu không có
                        }

                        $("#editProductModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error:', textStatus, errorThrown);
                    }
                });
            });

            $("#updateProduct").click(function () {
                var productId = $("#editProductId").val();
                var formData = new FormData();
                formData.append("Id", productId);
                formData.append("Name", $("#editProductName").val());
                formData.append("Description", $("#editProductDescription").val());
                formData.append("Price", $("#editProductPrice").val());
                formData.append("Weight", $("#editProductWeight").val());
                if ($("#editProductImage")[0].files.length > 0) {
                    formData.append("ImageFile", $("#editProductImage")[0].files[0]);
                }
                formData.append("Ammount", $("#editProductAmmount").val());
                formData.append("CategoryId", $("#editProductCategory").val());

                $.ajax({
                    url: 'https://localhost:7135/api/Products/UpdateProduct/' + productId,
                    type: 'PUT',
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (response) {
                        $("#editProductModal").modal("hide");
                        loadProductList();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error:', textStatus, errorThrown);
                    }
                });
            });

            $(document).on("click", ".btnDelete", function () {
                if (confirm("Are you sure you want to delete this product?")) {
                    var productId = $(this).data("id");

                $.ajax({
                    url: 'https://localhost:7135/api/Products/DeleteProduct/' + productId,
                    type: 'DELETE',
                    success: function (response) {
                        loadProductList();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error:', textStatus, errorThrown);
                    }
                });
            }
        });

        function loadProductList() {
            $.ajax({
                url: 'https://localhost:7135/api/Products',
                type: 'GET',
                dataType: 'json',
                success: function (products) {
                    var productContainer = $('#product-container').find('tbody');
                    productContainer.empty();
                    $.each(products, function (index, product) {
                        var row = '<tr>' +
                            '<td>' + product.id + '</td>' +
                            '<td>' + product.name + '</td>' +
                            '<td>' + product.description + '</td>' +
                            '<td>' + product.price + '</td>' +
                            '<td>' + product.weight + '</td>' +
                            '<td>' + '<img src="data:image/jpeg;base64,' + product.image + '" alt="Image" style="width:50px;height:50px;">' + '</td>' +
                            '<td>' + product.ammount + '</td>' +
                            '<td>' + product.categoryId + '</td>' +
                            '<td>' +
                            '<button class="btn btn-info btnEdit" data-id="' + product.id + '">Edit</button>' +
                            ' <button class="btn btn-danger btnDelete" data-id="' + product.id + '">Delete</button>' +
                            '</td>' +
                            '</tr>';
                        productContainer.append(row);
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error:', textStatus, errorThrown);
                }
            });
        }

            populateTables();
        });
    </script>

